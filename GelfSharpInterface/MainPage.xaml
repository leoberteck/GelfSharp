<Page
    x:Class="GelfSharpInterface.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:GelfSharpInterface"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:GelfSharpInterface.ViewModel"
    xmlns:Converter="using:GelfSharpInterface.Converter"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d">

    <Page.Resources>
        <Converter:ShortToStringConverter x:Key="ShortToStringConverter" />
        <Converter:SuccessToColorConverter x:Key="SuccessToColorConverter" />
        <Converter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    </Page.Resources>
    
    <Page.DataContext>
        <vm:MainViewModel />
    </Page.DataContext>

    <ScrollViewer>
        <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" >
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Rectangle Grid.ColumnSpan="2" Fill="{ThemeResource AppBarBackgroundThemeBrush}" />
            <TextBlock Grid.ColumnSpan="2" Text="GSI - GelfSharp Interface" Style="{StaticResource SubheaderTextBlockStyle}" Margin="10"/>
            <StackPanel Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Stretch">
                <Button Content="Stress!" Padding="30, 10" FontSize="20" Background="#FFD17616" Margin="10">
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{Binding StressTapped}" />
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </Button>
                <Button Content="Send!" Padding="30, 10" FontSize="20" Background="#FF62AE6A" Margin="10">
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{Binding SendTapped}" />
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </Button>
            </StackPanel>
            
            <StackPanel Grid.Row="1" Width="400" Orientation="Vertical">
                <TextBox Margin="10, 5" Header="Address" Text="{Binding Address, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <TextBox Margin="10, 5" Header="Short message" Text="{Binding ShortMessage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  />
                <TextBox Margin="10, 5" Header="Full Message" Text="{Binding LongMessage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" TextWrapping="Wrap" />
                <ComboBox Margin="10,5" Header="Level" HorizontalAlignment="Stretch" ItemsSource="{Binding ListLogLevels}" SelectedItem="{Binding Level, Mode=TwoWay}" />
            </StackPanel>
            <ListView Header="Responses" Grid.Column="1" Grid.Row="1" ScrollViewer.ZoomMode="Disabled" ItemsSource="{Binding ListResponse}" MaxHeight="500">
                <ListView.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" Style="{StaticResource SubheaderTextBlockStyle}" />
                    </DataTemplate>
                </ListView.HeaderTemplate>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid BorderBrush="#FF545454" BorderThickness="0,0,0,1" MinHeight="50">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Rectangle Fill="{Binding IsSuccess, Converter={StaticResource SuccessToColorConverter}}" Width="15"/>
                            <TextBlock Grid.Column="1" Text="{Binding Header}" Style="{StaticResource TitleTextBlockStyle}" Margin="15,10" VerticalAlignment="Center"/>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <Grid Grid.Row="2" Grid.ColumnSpan="2" Margin="25" BorderBrush="{ThemeResource AppBarBorderThemeBrush}" BorderThickness="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <TextBlock Text="Aditional Fields" Style="{StaticResource SubheaderTextBlockStyle}" Margin="15,0,0,0"/>
                <AppBarButton Icon="Add" Label="Add" HorizontalAlignment="Right" Background="#FF62AE6A">
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped" >
                            <core:InvokeCommandAction Command="{Binding AddAditionalField}" />
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </AppBarButton>
                <ItemsControl Grid.Row="1" ItemsSource="{Binding AditionalFields}" ScrollViewer.ZoomMode="Disabled" >
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="5,10" BorderThickness="2" BorderBrush="{ThemeResource ApplicationForegroundThemeBrush}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <TextBox BorderThickness="0" PlaceholderText="Type the Key value" Text="{Binding Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,0,15,0" FontSize="24" TextAlignment="Right" VerticalAlignment="Center" />
                                <SymbolIcon Grid.Column="1" Symbol="Forward" />
                                <TextBox Grid.Column="2" PlaceholderText="Type the Field value" Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10" FontSize="16"/>
                                <AppBarButton Grid.Column="3" Icon="Remove" Label="Remove" Background="#FFFF5C5C">
                                    <i:Interaction.Behaviors>
                                        <core:EventTriggerBehavior EventName="Tapped" >
                                            <core:InvokeCommandAction Command="{Binding Remove}" CommandParameter="{Binding}" />
                                        </core:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </AppBarButton>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </Grid>
    </ScrollViewer>
</Page>
